/* 
        Define a habilidade de um flex item crescer. Por padrão o valor é zero, 
    assim os flex itens ocupam um tamanho máximo relacionado o conteúdo 
    interno deles ou ao width definido.

        Ao definir 1 para todos os Flex Itens, eles tentarão ter a mesma
    largura e vão ocupar 100% do container. Digo tentarão pois 
    caso um elemento possua um conteúdo muito largo, ele irá respeitar o mesmo.

        Se você tiver uma linha com quatro itens, onde três são flex-grow: 1 e 
    um flex-grow: 2, o flex-grow: 2 tentará ocupar 2 vezes mais espaço extra 
    do que os outros elementos.

    OBS: justify-content não funciona em items com flex-grow definido.  
*/


/* 
    flex-grow: número;
    -> Basta definir um número
    
    flex-grow: 0;
    -> Obedece o width do elemento ou o flex-basis.
*/


/* Os itens não se expandem para ocupar o container. */
.grow0 {
	flex-grow: 0;
}

/* Os itens se expandem igualmente para ocupar o container. Utilizando apenas o flex-grow, o crescimento é distribuído igualmente antes e depois do conteúdo de cada elemento. (pois por padrão o flex-basis é auto) */
.grow1 {
	flex-grow: 1;
}

/* Os itens se expandem duas vezes mais que aqueles com flex-grow: 1; */
.grow2 {
	flex-grow: 2;
}

.item {
	margin: 5px;
	background: tomato;
	text-align: center;
	font-size: 1.5em;
}

/* Flex Container */
.container {
	max-width: 400px;
	margin: 0 auto;
	display: flex;
	border: 1px solid #ccc;
}
/* Flex Item */


h1 {
	text-align: center;
	margin: 20px 0 0 0;
	font-size: 1.25em;
	font-weight: normal;
}

body {
	font-family: monospace;
	color: #333;
}

